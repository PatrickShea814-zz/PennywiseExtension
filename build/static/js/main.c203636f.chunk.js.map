{"version":3,"sources":["Components/Nav/img/colorfullpw.png","Components/Nav/Nav.js","Components/ItemLinkPreview/ItemPreview.js","Components/Buttons/SaveItem.js","Components/Buttons/ToDashboard.js","Components/Balance/Balance.js","Components/Section/Wrapper.js","Components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Nav","styled","nav","_templateObject","ExtensionNav","react_default","a","createElement","href","className","src","pennywiselogo","alt","Component","ItemWrapper","div","ItemPreview_templateObject","ItemPreview","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","itemURL","_this2","chrome","tabs","query","active","currentWindow","URL","url","setState","console","log","microlink_m","style","fontFamily","media","size","controls","SaveItemButton","button","SaveItem_templateObject","SaveItem","Dashboard","ToDashboard_templateObject","GoToDashboard","target","Balance","h1","Balance_templateObject","MyBalance","Section","section","Wrapper_templateObject","Wrapper","Balance_Balance","ItemLinkPreview_ItemPreview","Buttons_SaveItem","ToDashboard","Header","Nav_Nav","Section_Wrapper","App","Components_Header_Header","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,omBCKxC,IAAMC,EAAMC,IAAOC,IAAVC,KA2BMC,mLAVP,OACIC,EAAAC,EAAAC,cAACP,EAAD,KACIK,EAAAC,EAAAC,cAAA,KAAGC,KAAM,8BAA+BC,UAAU,QAC9CJ,EAAAC,EAAAC,cAAA,OAAKG,IAAKC,IAAeC,IAAI,4BALtBC,uJCf3B,IAAMC,EAAcb,IAAOc,IAAVC,KAwCFC,cAjCX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,QAAS,+BAHER,mFAOC,IAAAS,EAAAN,KAChBO,OAAOC,KAAKC,MAAM,CAAEC,QAAQ,EAAMC,eAAe,GAAQ,SAAAH,GACrD,IAAMH,EAAU,IAAIO,IAAIJ,EAAK,GAAGK,KAChCP,EAAKQ,SAAS,CACVT,QAASA,IAEbU,QAAQC,IAAIX,sCAKhB,OACItB,EAAAC,EAAAC,cAACO,EAAD,KACIT,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CACI9B,UAAU,cACV0B,IAAKb,KAAKI,MAAMC,QAChBa,MAAO,CAAEC,WAAY,iEACrBC,MAAO,CAAC,QAAS,SACjBC,KAAK,QACLC,UAAQ,YA3BF/B,8kBCR1B,IAAMgC,EAAiB5C,IAAO6C,OAAVC,KAgCLC,mLANP,OACI3C,EAAAC,EAAAC,cAACsC,EAAD,gCAHWhC,4kBCxBvB,IAAMoC,EAAYhD,IAAO6C,OAAVI,KAgCAC,mLANP,OACI9C,EAAAC,EAAAC,cAAC0C,EAAD,CAAWxC,UAAU,MAAMD,KAAK,+BAA+B4C,OAAO,UAAtE,oBAHgBvC,6eCvB5B,IAAMwC,EAAUpD,IAAOqD,GAAVC,KA6BEC,mLANP,OACInD,EAAAC,EAAAC,cAAC8C,EAAD,iCAHYxC,sLCdxB,IAAM4C,EAAUxD,IAAOyD,QAAVC,KAyCEC,mLAXP,OACIvD,EAAAC,EAAAC,cAACkD,EAAD,KACIpD,EAAAC,EAAAC,cAACsD,EAAD,MACAxD,EAAAC,EAAAC,cAACuD,EAAD,MACAzD,EAAAC,EAAAC,cAACwD,EAAD,MACA1D,EAAAC,EAAAC,cAACyD,EAAD,cAPMnD,aCvBPoD,mLATP,OACI5D,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAC2D,EAAD,MACA7D,EAAAC,EAAAC,cAAC4D,EAAD,cALKtD,mBCQNuD,MARf,WACE,OACE/D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAC8D,EAAD,QCIcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOvE,EAAAC,EAAAC,cAACsE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c203636f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/colorfullpw.1d4affa1.png\";","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nimport pennywiselogo from './img/colorfullpw.png';\n\nconst Nav = styled.nav`\n    height: 8%;\n    border-bottom: 1px solid #00a79d;\n    img {\n        max-width: 140px;\n        max-height : auto;\n        vertical-align: middle;\n    }\n    .logo {\n        display: inline-block;\n        vertical-align: middle;\n        margin: 3% auto;\n    }\n`;\n\nclass ExtensionNav extends Component {\n    render() {\n        return (\n            <Nav>\n                <a href={\"https://www.getpennywise.io\"} className=\"logo\">\n                    <img src={pennywiselogo} alt=\"PennyWise Logo\" />\n                </a>\n            </Nav>\n        )\n    }\n}\n\nexport default ExtensionNav;","/* global chrome */\nimport React, { Component } from 'react';\nimport MicrolinkCard from '@microlink/react';\nimport styled from 'styled-components';\n\nconst ItemWrapper = styled.div`\n    padding: 3%;\n    text-align: center;\n    margin: 0;\n`;\n\nclass ItemPreview extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            itemURL: 'https://www.getpennywise.io'\n        };\n    }\n\n    componentDidMount() {\n        chrome.tabs.query({ active: true, currentWindow: true }, tabs => {\n            const itemURL = new URL(tabs[0].url);\n            this.setState({\n                itemURL: itemURL,\n            });\n            console.log(itemURL);\n        });\n    }\n\n    render() {\n        return (\n            <ItemWrapper>\n                <MicrolinkCard\n                    className='item-shadow'\n                    url={this.state.itemURL}\n                    style={{ fontFamily: 'Nitti, \"Microsoft YaHei\", 微软雅黑, monospace' }}\n                    media={['video', 'image']}\n                    size='large'\n                    controls\n                />\n            </ItemWrapper>\n        )\n    }\n}\n\nexport default ItemPreview;","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst SaveItemButton = styled.button`\ndisplay: inline-block;\n    font-size: 18px;\n    letter-spacing: 2px;\n    width: 100%;\n    margin: 0 0 10% 0;\n    padding: 10px 1em;\n    color: white;\n    background-color: #7ae0bb;\n    cursor: pointer;\n    text-decoration: none;\n    vertical-align: middle;\n    border: 1px solid #7ae0bb;\n    box-shadow: 0px 5px 8px #888888;\n    text-align: center;\n    line-height: normal;\n    &:hover {\n        background-color: #00a79d;\n        border: 1px solid #00a79d;\n        color: white;\n    }\n`;\n\n\nclass SaveItem extends Component {\n    render() {\n        return (\n            <SaveItemButton>Add To Wish List</SaveItemButton>\n        )\n    }\n}\n\nexport default SaveItem;","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst Dashboard = styled.button`\n    display: inline-block;\n    font-size: 18px;\n    letter-spacing: 2px;\n    width: 50%;\n    height:40%;\n    margin-bottom: 10%;\n    padding: 10px 0;\n    color: #ffffff;\n    background-color: #00a79d;\n    cursor: pointer;\n    text-decoration: none;\n    vertical-align: middle;\n    text-align: center;\n    box-shadow: 0px 5px 8px #888888;\n    line-height: normal;\n    border: none;\n    border-radius: 25px;\n    &:hover {\n        background-color: #7ae0bb;\n        color: white;\n    }\n`;\n\nclass GoToDashboard extends Component {\n    render() {\n        return (\n            <Dashboard className='btn' href=\"https://www.getpennywise.io/\" target=\"_blank\">Dashboard</Dashboard>\n        )\n    }\n}\n\nexport default GoToDashboard;","import React, { Component } from 'react';\n\nimport styled from 'styled-components';\n\nconst Balance = styled.h1`\ndisplay: inline-block;\n    font-size: 18px;\n    letter-spacing: 2px;\n    margin: 0;\n    width: 100%;\n    padding: 10px;\n    color: white;\n    background-color: #00a79d;\n    text-decoration: none;\n    vertical-align: middle;\n    border: 1px solid #00a79d;\n    line-height: normal;\n    &:hover {\n        background-color: #7ae0bb;\n        border: 1px solid #7ae0bb;\n        color: white;\n    }\n`;\n\n\nclass MyBalance extends Component {\n    render() {\n        return (\n            <Balance>Pennybank: $53.98</Balance>\n        )\n    }\n}\n\nexport default MyBalance;","import React, { Component } from 'react';\n// import MagicLamp from '../Nav/img/greenlamp.png';\nimport styled from 'styled-components';\n// import SignInBtn from '../Buttons/SignIn';\n// import GoToSite from '../Buttons/ToSite';\nimport ItemPreview from '../ItemLinkPreview/ItemPreview';\nimport SaveItem from '../Buttons/SaveItem';\nimport GoToDashboard from '../Buttons/ToDashboard';\nimport MyBalance from '../Balance/Balance';\n\n\nconst Section = styled.section`\n    color: #00a79d;\n    margin-top: 10%;\n    text-align: center;\n    justify-content: center;\n`;\n\n// const Title = styled.h1`\n//     text-align: center\n//     font-size: 40px;\n//     margin: 5% auto;\n// `;\n\n// const CustIcon = styled.img`\n//     width: 50px;\n//     height: auto;\n// `;\n\n\n\n\n// <Title><CustIcon src={MagicLamp} /></Title>\n//     <Title><i class=\"fas fa-piggy-bank\"></i></Title>\n//     <Title><i class=\"fas fa-gift\"></i></Title>\n//     <SignInBtn />\n//     <GoToSite />\n\n\nclass Wrapper extends Component {\n    render() {\n        return (\n            <Section>\n                <MyBalance />\n                <ItemPreview />\n                <SaveItem />\n                <GoToDashboard />\n            </Section>\n        )\n    }\n}\n\nexport default Wrapper;","import React, { Component } from 'react';\n\nimport ExtensionNav from '../Nav/Nav';\nimport Wrapper from '../Section/Wrapper';\n\nclass Header extends Component {\n    render() {\n        return (\n            <header>\n                <ExtensionNav />\n                <Wrapper />\n            </header>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\nimport Header from './Components/Header/Header';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}